name: Docker Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set USER environment variable
        run: echo "USER=$(whoami)" >> $GITHUB_ENV

      - name: Set MANAGER_NODE_IP environment variable
        run: echo "MANAGER_NODE_IP=${{ secrets.MANAGER_NODE_IP }}" >> $GITHUB_ENV

      - name: Add SSH key to agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for go-app
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: go-app:latest  # Tag your image locally
          load: true         # Load image to local docker daemon
          platform: linux/arm64

      - name: Copy docker-compose.yml to manager node
        run: |
          scp docker-compose.yml ${{ env.USER }}@${{ env.MANAGER_NODE_IP }}:/home/${{ env.USER }}/docker-compose.yml

      - name: Copy Traefik configuration (if available)
        run: |
          ssh ${{ env.USER }}@${{ env.MANAGER_NODE_IP }} "mkdir -p /home/${{ env.USER }}/traefik/letsencrypt"
          # Copy files only if there are any. This doesn't produce an error if the folder is empty.
          scp -r traefik/letsencrypt/* ${{ env.USER }}@${{ env.MANAGER_NODE_IP }}:/home/${{ env.USER }}/traefik/letsencrypt/ || true

      - name: Initialize Docker Swarm (if necessary)
        run: |
          ssh ${{ env.USER }}@${{ env.MANAGER_NODE_IP }} \
            "docker info --format '{{.Swarm.LocalNodeState}}' | grep active || docker swarm init"
            
      - name: Deploy to Docker Swarm
        run: |
          echo "Deploying to Docker Swarm..."
          ssh ${{ env.USER }}@${{ env.MANAGER_NODE_IP }} \
            "docker stack deploy --compose-file /home/${{ env.USER }}/docker-compose.yml goapp"
