name: Docker Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get current user
        run: whoami

      - name: Check if user is in docker group
        id: check_docker_group
        run: |
          if groups $USER | grep -q docker; then
            echo "::set-output name=in_docker_group::true"
          else
            echo "::set-output name=in_docker_group::false"
          fi

      - name: Add user to docker group (if not already in group)
        if: steps.check_docker_group.outputs.in_docker_group == 'false'
        run: sudo usermod -aG docker $USER

      - name: Restart Docker daemon (if user was added to group)
        if: steps.check_docker_group.outputs.in_docker_group == 'false'
        run: sudo systemctl restart docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: go-app:latest  # Local image tag
          load: true # Load the image into the local Docker daemon
          platform: linux/arm64

      - name: Deploy to Docker Swarm
        run: |
          # Add commands to deploy to your Docker Swarm
          # For example:
          # docker stack deploy --compose-file docker-compose.yml goapp
          echo "Deploying to Docker Swarm..."
          ssh <USER>@<MANAGER_NODE_IP> "docker stack deploy --compose-file docker-compose.yml goapp" # Replace with your actual command
